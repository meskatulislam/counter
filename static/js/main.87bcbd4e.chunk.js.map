{"version":3,"sources":["reportWebVitals.js","components/navbar.component.jsx","components/reset.component.jsx","components/counter.component.jsx","components/counters.component.jsx","components/app.component.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","className","href","this","props","nonZeroItems","Component","Reset","onClick","onReset","type","Counter","formatCount","state","counter","value","onIncrement","id","onDecrement","onDelete","Counters","counters","map","App","useState","setCounters","useEffect","console","log","count","forEach","getNonZeroItems","all_counters","index","updated_counters","idx","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87bcbd4e.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from 'react';\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"#\">\r\n                        Navbar\r\n                        <span className=\"badge bg-secondary\">\r\n                            {this.props.nonZeroItems}\r\n                        </span>\r\n                    </a>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\n\r\nclass Reset extends Component {\r\n    render() {\r\n        return (\r\n            <button onClick={this.props.onReset} type=\"button\" className=\"btn btn-primary m-4\">Reset</button>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Reset;","import React, { Component } from 'react';\r\n\r\nclass Counter extends Component {\r\n\r\n    formatCount = () => {\r\n        if (this.state.counter===0) return 'Zero'\r\n        return this.state.counter;\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <div >\r\n                    <span className=\"badge bg-primary mr-5\" >\r\n                        {this.props.value}\r\n                    </span>\r\n\r\n                    <button\r\n                        onClick={() => this.props.onIncrement(this.props.id)}\r\n                        type=\"button\"\r\n                        className=\"btn btn-secondary m-2\">\r\n                        +\r\n                    </button>\r\n                    \r\n                    <button\r\n                        onClick={() => this.props.onDecrement(this.props.id)}\r\n                        type=\"button\"\r\n                        className=\"btn btn-secondary m-2\">\r\n                        -\r\n                    </button>\r\n                    <button\r\n                        onClick={() => this.props.onDelete(this.props.id)}\r\n                        type=\"button\"\r\n                        className=\"btn btn-danger m-2\">\r\n                        Delete\r\n                    </button>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Counter;","import React, { Component } from 'react';\r\nimport Counter from './counter.component';\r\n\r\nclass Counters extends Component {\r\n    \r\n    \r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            {\r\n                this.props.counters.map(counter => {\r\n                    return <Counter\r\n                                key={counter.id}\r\n                                value={counter.value} \r\n                                id={counter.id}\r\n                                onIncrement={this.props.onIncrement}\r\n                                onDecrement={this.props.onDecrement}\r\n                                onDelete={this.props.onDelete}\r\n                            />\r\n                })\r\n            }\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Counters;","import React, { useState, useEffect } from 'react';\r\nimport Navbar from './navbar.component';\r\nimport Reset from './reset.component';\r\nimport Counters from './counters.component';\r\n\r\nfunction App() {\r\n    const [counters, setCounters] = useState([\r\n        {id: 0, value: 0},\r\n        {id: 1, value: 5},\r\n        {id: 2, value: 9},\r\n        {id: 3, value: 1},\r\n        {id: 4, value: 0},\r\n    ]);\r\n\r\n    useEffect( () => {\r\n        console.log('=========>', counters);\r\n    });\r\n\r\n    const [name, setName] = useState('Pondit');\r\n\r\n    const updateName = () => {\r\n        setName('Meskat')\r\n    }\r\n    const handleReset = () => {\r\n        const all_counters = counters.map((counter, index) => {\r\n            const obj = {id: index, value: 0};\r\n            return obj;\r\n        });\r\n        setCounters(all_counters);\r\n        \r\n    }\r\n\r\n    const handleIncrement = (id) => {\r\n        const updated_counters = counters.map((counter, idx) => {\r\n            if(counter.id === id) return { id: idx, value: counter.value+1};\r\n            return counter;\r\n        });\r\n        setCounters(updated_counters)\r\n    }\r\n\r\n    const handleDecrement = (id) => {\r\n        const updated_counters = counters.map((counter, idx) => {\r\n            if(counter.value !== 0){\r\n                if(counter.id === id) return { id: idx, value: counter.value-1};\r\n            }\r\n            return counter;\r\n        });\r\n        setCounters(updated_counters)\r\n    }\r\n\r\n    const getNonZeroItems = () => {\r\n        let count = 0;\r\n        counters.forEach(counter => {\r\n            if(counter.value > 0) count++;\r\n        })\r\n        return count;\r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n        const updated_counters = counters.filter(counter => counter.id !== id);\r\n        setCounters(updated_counters)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Navbar\r\n                nonZeroItems={getNonZeroItems()}\r\n            />\r\n\r\n            <Reset\r\n                onReset={handleReset}\r\n            />\r\n\r\n            <Counters \r\n                counters={counters}\r\n                onIncrement={handleIncrement}\r\n                onDecrement={handleDecrement}\r\n                onDelete={handleDelete}\r\n            />\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './components/app.component';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}